---
apiVersion: kuboard.cn/v1
k8sYamls:
  rbac-snapshot-controller.yaml: >-
    # RBAC file for the snapshot controller.

    #

    # The snapshot controller implements the control loop for CSI snapshot
    functionality.

    # It should be installed as part of the base Kubernetes distribution in an
    appropriate

    # namespace for components implementing base system functionality. For
    installing with

    # Vanilla Kubernetes, kube-system makes sense for the namespace.


    apiVersion: v1

    kind: ServiceAccount

    metadata:
      name: snapshot-controller
      namespace: kube-system

    ---

    kind: ClusterRole

    apiVersion: rbac.authorization.k8s.io/v1

    metadata:
      # rename if there are conflicts
      name: snapshot-controller-runner
    rules:
      - apiGroups: [""]
        resources: ["persistentvolumes"]
        verbs: ["get", "list", "watch"]
      - apiGroups: [""]
        resources: ["persistentvolumeclaims"]
        verbs: ["get", "list", "watch", "update"]
      - apiGroups: ["storage.k8s.io"]
        resources: ["storageclasses"]
        verbs: ["get", "list", "watch"]
      - apiGroups: [""]
        resources: ["events"]
        verbs: ["list", "watch", "create", "update", "patch"]
      - apiGroups: ["snapshot.storage.k8s.io"]
        resources: ["volumesnapshotclasses"]
        verbs: ["get", "list", "watch"]
      - apiGroups: ["snapshot.storage.k8s.io"]
        resources: ["volumesnapshotcontents"]
        verbs: ["create", "get", "list", "watch", "update", "delete"]
      - apiGroups: ["snapshot.storage.k8s.io"]
        resources: ["volumesnapshots"]
        verbs: ["get", "list", "watch", "update"]
      - apiGroups: ["snapshot.storage.k8s.io"]
        resources: ["volumesnapshots/status"]
        verbs: ["update"]

    ---

    kind: ClusterRoleBinding

    apiVersion: rbac.authorization.k8s.io/v1

    metadata:
      name: snapshot-controller-role
    subjects:
      - kind: ServiceAccount
        name: snapshot-controller
        namespace: kube-system
    roleRef:
      kind: ClusterRole
      # change the name also here if the ClusterRole gets renamed
      name: snapshot-controller-runner
      apiGroup: rbac.authorization.k8s.io

    ---

    kind: Role

    apiVersion: rbac.authorization.k8s.io/v1

    metadata:
      namespace: kube-system
      name: snapshot-controller-leaderelection
    rules:

    - apiGroups: ["coordination.k8s.io"]
      resources: ["leases"]
      verbs: ["get", "watch", "list", "delete", "update", "create"]

    ---

    kind: RoleBinding

    apiVersion: rbac.authorization.k8s.io/v1

    metadata:
      name: snapshot-controller-leaderelection
      namespace: kube-system
    subjects:
      - kind: ServiceAccount
        name: snapshot-controller
        namespace: kube-system
    roleRef:
      kind: Role
      name: snapshot-controller-leaderelection
      apiGroup: rbac.authorization.k8s.io
      
  setup-snapshot-controller.yaml: >
    # This YAML file shows how to deploy the snapshot controller


    # The snapshot controller implements the control loop for CSI snapshot
    functionality.

    # It should be installed as part of the base Kubernetes distribution in an
    appropriate

    # namespace for components implementing base system functionality. For
    installing with

    # Vanilla Kubernetes, kube-system makes sense for the namespace.


    ---

    kind: StatefulSet

    apiVersion: apps/v1

    metadata:
      name: snapshot-controller
      namespace: kube-system
    spec:
      serviceName: "snapshot-controller"
      replicas: 1
      selector:
        matchLabels:
          app: snapshot-controller
      template:
        metadata:
          labels:
            app: snapshot-controller
        spec:
          serviceAccount: snapshot-controller
          containers:
            - name: snapshot-controller
              image: quay.io/k8scsi/snapshot-controller:v3.0.0
              args:
                - "--v=5"
                - "--leader-election=false"
              imagePullPolicy: IfNotPresent

kind: KuboardAddonResource
lifecycleHandler:
  additionalStep: |-
    <div class="kb_text_regular">
      <li>Snapshotter 配合 CSI 插件使用，可以为 CSI 关联的 PVC 创建快照。Kuboard 测试此套件可以与 ceph-csi 配合工作。</li>
      <li>Kuboard 版本不低于 v2.0.5</li>
      <li>Kubernetes 版本不低于 v1.17.0</li>
    </div>
  beforeUninstall: JavaScriptToExecuteBeforeUninstall
  disable: JavaScriptToExecuteBeforeDisable
  initialize: >
    import { startInitTasks, completeInitTask, failInitTask, KuboardProxy } from
    '/addon-api/index.js'


    export function initializeKuboardAddon (initContext) {
      startInitTasks([
        {name: 'csi-external-snapshotter', description: '初始化任务 csi-external-snapshotter', descriptionEn: 'init task: csi-external-snapshotter' },
      ])
      setTimeout(_ => {
        completeInitTask('csi-external-snapshotter')
      }, 1000)
      console.log('finished')
    }
  install:
    - rbac-snapshot-controller.yaml
    - setup-snapshot-controller.yaml
metadata:
  name: csi-external-snapshotter.addons.kuboard.cn
  namespace: kube-system
parameters: []
